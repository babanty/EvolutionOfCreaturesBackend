// <auto-generated />
using System;
using EvolutionOfCreatures.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EvolutionOfCreatures.Db.Migrations
{
    [DbContext(typeof(EvolutionOfCreaturesContext))]
    partial class EvolutionOfCreaturesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IndividualSettingsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlayerStatisticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("IndividualSettingsId");

                    b.HasIndex("PlayerStatisticsId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.PlayerProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayersProgress");
                });

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.PlayerSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LogLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientsSettings");
                });

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.PlayerStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OfflineGameCount")
                        .HasColumnType("int");

                    b.Property<int>("OfflineWinCount")
                        .HasColumnType("int");

                    b.Property<int>("OnlineGameCount")
                        .HasColumnType("int");

                    b.Property<int>("OnlineWinCount")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayersStatistics");
                });

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.Player", b =>
                {
                    b.HasOne("EvolutionOfCreatures.Db.Entities.Account", null)
                        .WithOne("Player")
                        .HasForeignKey("EvolutionOfCreatures.Db.Entities.Player", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvolutionOfCreatures.Db.Entities.PlayerSettings", "IndividualSettings")
                        .WithMany()
                        .HasForeignKey("IndividualSettingsId");

                    b.HasOne("EvolutionOfCreatures.Db.Entities.PlayerStatistics", "PlayerStatistics")
                        .WithMany()
                        .HasForeignKey("PlayerStatisticsId");

                    b.Navigation("IndividualSettings");

                    b.Navigation("PlayerStatistics");
                });

            modelBuilder.Entity("EvolutionOfCreatures.Db.Entities.Account", b =>
                {
                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
